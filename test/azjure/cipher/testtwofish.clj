(ns azjure.cipher.testtwofish
  (:require [azjure.libtest :refer :all]))

(def ^{:private true :doc "Configuration Map"} cm
  (atom {:type :twofish :eid :str :doe :str}))

(def ct-128-tf-ecb-base
  [0x54 0x85 0x9A 0x6A 0x7E 0xD1 0x95 0x1F
   0x06 0xCB 0xE2 0xB0 0x40 0x78 0x4C 0x70
   0x7B 0x4D 0x8A 0xAE 0x12 0x59 0x4E 0x5C
   0x5A 0x05 0x79 0x27 0xE2 0x5B 0x22 0x66
   0x1C 0xE3 0x7A 0xDC 0xE3 0xCD 0xEA 0x26])

(def ct-128-tf-ecb-iso7186
  (into ct-128-tf-ecb-base [0x21 0x3F 0xF6 0xB9 0x24 0x2B 0x4F 0x58]))

(def ct-128-tf-ecb-x923
  (into ct-128-tf-ecb-base [0x2E 0x46 0x87 0x6D 0xF1 0xBE 0x52 0x12]))

(def ct-128-tf-ecb-pkcs7
  (into ct-128-tf-ecb-base [0x29 0x55 0x66 0x4A 0x0A 0x90 0x4E 0x1A]))

(def ct-128-tf-ecb-zero
  (into ct-128-tf-ecb-base [0x28 0xF0 0xBF 0x95 0x4E 0x77 0xFE 0xEC]))

(def ct-128-tf-cbc-base
  [0x54 0x85 0x9a 0x6a 0x7e 0xd1 0x95 0x1f
   0x0e 0xe7 0x35 0xf3 0x38 0x98 0x79 0xf4
   0x5b 0xd7 0xb1 0x5a 0x63 0x42 0x03 0x9b
   0xbd 0xe5 0xdf 0x82 0x43 0x78 0xa7 0x4f
   0xec 0x7c 0xff 0xae 0x47 0xa4 0x7a 0x50])

(def ct-128-tf-cbc-iso7186
  (into ct-128-tf-cbc-base [0xb1 0x91 0xad 0x63 0xf3 0x57 0x56 0x05]))

(def ct-128-tf-cbc-x923
  (into ct-128-tf-cbc-base [0x5e 0x98 0x6e 0x01 0x32 0xbb 0x9c 0xcb]))

(def ct-128-tf-cbc-pkcs7
  (into ct-128-tf-cbc-base [0xb5 0x1c 0x0a 0x93 0x43 0x7e 0x21 0xe6]))

(def ct-128-tf-cbc-zero
  (into ct-128-tf-cbc-base [0xf8 0xf8 0x4a 0x78 0xc8 0x47 0xc1 0x4f]))

(def ct-128-tf-pcbc-base
  [0x54 0x85 0x9a 0x6a 0x7e 0xd1 0x95 0x1f
   0xe7 0x7d 0x1f 0x62 0xc3 0x87 0x95 0x8d
   0xac 0xfe 0x75 0x38 0xe0 0xb9 0x3e 0x60
   0x55 0x76 0x42 0x89 0xcc 0x2b 0x71 0xf5
   0x05 0x3f 0xc8 0x01 0xe4 0xc5 0x98 0x6f])

(def ct-128-tf-pcbc-iso7186
  (into ct-128-tf-pcbc-base [0xdf 0x0b 0x35 0xa3 0xe0 0x7d 0x6b 0x4c]))

(def ct-128-tf-pcbc-x923
  (into ct-128-tf-pcbc-base [0xd1 0x1a 0xa6 0x26 0xd9 0x8f 0x89 0x22]))

(def ct-128-tf-pcbc-pkcs7
  (into ct-128-tf-pcbc-base [0x06 0x6d 0x21 0x3d 0x86 0x2e 0x14 0x1c]))

(def ct-128-tf-pcbc-zero
  (into ct-128-tf-pcbc-base [0xc7 0x07 0xac 0xe9 0x27 0x82 0x6d 0xf3]))

(def ct-128-tf-cfb-base
  [0x1a 0x91 0xf2 0x65 0x10 0xed 0xb4 0x1b
   0x83 0x4b 0x1b 0x6c 0x2d 0xfa 0x1f 0x35
   0xec 0xfd 0xdd 0xea 0x49 0x56 0x2e 0x82
   0xb0 0x85 0x2b 0x99 0x29 0x8e 0x37 0x99
   0x13 0xf4 0x92 0x59 0xeb 0x7d 0x0d 0xaa])

(def ct-128-tf-cfb-iso7186
  (into ct-128-tf-cfb-base [0x7f 0xb5 0x27 0x46 0x7b 0xeb 0x30 0x52]))

(def ct-128-tf-cfb-x923
  (into ct-128-tf-cfb-base [0x7f 0xb5 0x27 0x46 0xfb 0xeb 0x30 0x56]))

(def ct-128-tf-cfb-pkcs7
  (into ct-128-tf-cfb-base [0x7f 0xb5 0x27 0x46 0xff 0xef 0x34 0x56]))

(def ct-128-tf-cfb-zero
  (into ct-128-tf-cfb-base [0x7f 0xb5 0x27 0x46 0xfb 0xeb 0x30 0x52]))

(def ct-128-tf-ofb-base
  [0x1a 0x91 0xf2 0x65 0x10 0xed 0xb4 0x1b
   0x8a 0xe0 0x52 0x95 0x23 0x63 0xbc 0x41
   0x35 0x8c 0xca 0x85 0xc9 0xc9 0x44 0x0f
   0x40 0xe7 0xbe 0x72 0xb6 0x66 0xf0 0x0e
   0x7a 0xa2 0x0a 0xe4 0x97 0x1f 0x43 0xd1])

(def ct-128-tf-ofb-iso7186
  (into ct-128-tf-ofb-base [0x94 0x34 0x58 0xa8 0x81 0x95 0x48 0xab]))

(def ct-128-tf-ofb-x923
  (into ct-128-tf-ofb-base [0x94 0x34 0x58 0xa8 0x01 0x95 0x48 0xaf]))

(def ct-128-tf-ofb-pkcs7
  (into ct-128-tf-ofb-base [0x94 0x34 0x58 0xa8 0x05 0x91 0x4c 0xaf]))

(def ct-128-tf-ofb-zero
  (into ct-128-tf-ofb-base [0x94 0x34 0x58 0xa8 0x01 0x95 0x48 0xab]))

(def ct-128-tf-ctr-base
  [0x1a 0x91 0xf2 0x65 0x10 0xed 0xb4 0x1b
   0x0f 0xcd 0x64 0x25 0x38 0x26 0x71 0x87
   0xcb 0x0c 0x6e 0x4c 0xc7 0x8c 0xec 0x6e
   0x16 0x78 0x86 0xdb 0x65 0x7e 0x0c 0xd1
   0xd8 0x4d 0x96 0x08 0x43 0x76 0x89 0xcb])

(def ct-128-tf-ctr-iso7186
  (into ct-128-tf-ctr-base [0x4f 0x0a 0x72 0x9b 0x43 0x40 0x08 0xed]))

(def ct-128-tf-ctr-x923
  (into ct-128-tf-ctr-base [0x4f 0x0a 0x72 0x9b 0xc3 0x40 0x08 0xe9]))

(def ct-128-tf-ctr-pkcs7
  (into ct-128-tf-ctr-base [0x4f 0x0a 0x72 0x9b 0xc7 0x44 0x0c 0xe9]))

(def ct-128-tf-ctr-zero
  (into ct-128-tf-ctr-base [0x4f 0x0a 0x72 0x9b 0xc3 0x40 0x08 0xed]))

(def ^{:private true :doc "Test vectors as defined in the spec."}
  test-vectors
  [[[0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
     0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
    [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
     0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
    [0x9F 0x58 0x9F 0x5C 0xF6 0x12 0x2C 0x32
     0xB6 0xBF 0xEC 0x2F 0x2A 0xE8 0xC3 0x5A]]
   [[0x01 0x23 0x45 0x67 0x89 0xAB 0xCD 0xEF
     0xFE 0xDC 0xBA 0x98 0x76 0x54 0x32 0x10
     0x00 0x11 0x22 0x33 0x44 0x55 0x66 0x77]
    [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
     0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
    [0xCF 0xD1 0xD2 0xE5 0xA9 0xBE 0x9C 0xDF
     0x50 0x1F 0x13 0xB8 0x92 0xBD 0x22 0x48]]
   [[0x01 0x23 0x45 0x67 0x89 0xAB 0xCD 0xEF
     0xFE 0xDC 0xBA 0x98 0x76 0x54 0x32 0x10
     0x00 0x11 0x22 0x33 0x44 0x55 0x66 0x77
     0x88 0x99 0xAA 0xBB 0xCC 0xDD 0xEE 0xFF]
    [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
     0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
    [0x37 0x52 0x7B 0xE0 0x05 0x23 0x34 0xB8
     0x9F 0x0C 0xFC 0xCA 0xE8 0x7C 0xFA 0x20]]])

(def ^{:private true :doc "Suite tests"}
  test-suites
  [[:ecb :iso7816 ct-128-tf-ecb-iso7186]
   [:ecb :iso10126 ct-128-tf-ecb-base]
   [:ecb :pkcs7 ct-128-tf-ecb-pkcs7]
   [:ecb :x923 ct-128-tf-ecb-x923]
   [:ecb :zero ct-128-tf-ecb-zero]
   [:cbc :iso7816 ct-128-tf-cbc-iso7186]
   [:cbc :iso10126 ct-128-tf-cbc-base]
   [:cbc :pkcs7 ct-128-tf-cbc-pkcs7]
   [:cbc :x923 ct-128-tf-cbc-x923]
   [:cbc :zero ct-128-tf-cbc-zero]
   [:pcbc :iso7816 ct-128-tf-pcbc-iso7186]
   [:pcbc :iso10126 ct-128-tf-pcbc-base]
   [:pcbc :pkcs7 ct-128-tf-pcbc-pkcs7]
   [:pcbc :x923 ct-128-tf-pcbc-x923]
   [:pcbc :zero ct-128-tf-pcbc-zero]
   [:cfb :iso7816 ct-128-tf-cfb-iso7186]
   [:cfb :iso10126 ct-128-tf-cfb-base]
   [:cfb :pkcs7 ct-128-tf-cfb-pkcs7]
   [:cfb :x923 ct-128-tf-cfb-x923]
   [:cfb :zero ct-128-tf-cfb-zero]
   [:ofb :iso7816 ct-128-tf-ofb-iso7186]
   [:ofb :iso10126 ct-128-tf-ofb-base]
   [:ofb :pkcs7 ct-128-tf-ofb-pkcs7]
   [:ofb :x923 ct-128-tf-ofb-x923]
   [:ofb :zero ct-128-tf-ofb-zero]
   [:ctr :iso7816 ct-128-tf-ctr-iso7186]
   [:ctr :iso10126 ct-128-tf-ctr-base]
   [:ctr :pkcs7 ct-128-tf-ctr-pkcs7]
   [:ctr :x923 ct-128-tf-ctr-x923]
   [:ctr :zero ct-128-tf-ctr-zero]])

(check-blocksize-bits cm 128)
(check-keysizes-bits cm (range 128 257))
(dorun (map (partial check-test-vectors cm) test-vectors))
;(dorun (map #(check-test-suite cm % :key zeros-64-bits :iv zeros-64-bits)
;            test-suites))