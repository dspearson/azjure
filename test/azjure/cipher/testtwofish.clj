(ns azjure.cipher.testtwofish
  (:require [azjure.libtest :refer :all]))

(def ^{:private true :doc "Configuration Map"} cm
  (atom {:type :twofish :eid :str :doe :str}))

(def ^{:private true :doc "Test vectors as defined in the spec."}
  test-vectors
  [[[0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
     0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
    [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
     0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
    [0x9F 0x58 0x9F 0x5C 0xF6 0x12 0x2C 0x32
     0xB6 0xBF 0xEC 0x2F 0x2A 0xE8 0xC3 0x5A]]
   [[0x01 0x23 0x45 0x67 0x89 0xAB 0xCD 0xEF
     0xFE 0xDC 0xBA 0x98 0x76 0x54 0x32 0x10
     0x00 0x11 0x22 0x33 0x44 0x55 0x66 0x77]
    [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
     0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
    [0xCF 0xD1 0xD2 0xE5 0xA9 0xBE 0x9C 0xDF
     0x50 0x1F 0x13 0xB8 0x92 0xBD 0x22 0x48]]
   [[0x01 0x23 0x45 0x67 0x89 0xAB 0xCD 0xEF
     0xFE 0xDC 0xBA 0x98 0x76 0x54 0x32 0x10
     0x00 0x11 0x22 0x33 0x44 0x55 0x66 0x77
     0x88 0x99 0xAA 0xBB 0xCC 0xDD 0xEE 0xFF]
    [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
     0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
    [0x37 0x52 0x7B 0xE0 0x05 0x23 0x34 0xB8
     0x9F 0x0C 0xFC 0xCA 0xE8 0x7C 0xFA 0x20]]])

(check-blocksize-bits cm 128)
(check-keysizes-bits cm (range 128 257))
(dorun (map (partial check-test-vectors cm) test-vectors))
;(dorun (map #(check-test-suite cm % :key zeros-64-bits :iv zeros-64-bits)
;            test-suites))