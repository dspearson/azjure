;; ## CAST5 Block Cipher Tests

(ns ^{:author "Jason Ozias"
      :doc "Test suite for the CAST5 block cipher"}
  net.ozias.crypt.cipher.testcast5
  (:require [clojure.test :refer :all]
            (net.ozias.crypt [libtest :refer :all]
                             [testivs :refer :all]
                             [testkeys :refer :all]
                             [testplaintext :refer :all]
                             [testciphertext :refer :all]
                             [cryptsuite :as cs]
                             [cryptsuite :refer (->CAST5ECBPKCS7)]
                             [cryptsuite :refer (->CAST5ECBZERO)]
                             [cryptsuite :refer (->CAST5ECBISO10126)]
                             [cryptsuite :refer (->CAST5ECBX923)]
                             [cryptsuite :refer (->CAST5ECBISO7816)]
                             [cryptsuite :refer (->CAST5CBCPKCS7)]
                             [cryptsuite :refer (->CAST5CBCZERO)]
                             [cryptsuite :refer (->CAST5CBCISO10126)]
                             [cryptsuite :refer (->CAST5CBCX923)]
                             [cryptsuite :refer (->CAST5CBCISO7816)]
                             [cryptsuite :refer (->CAST5PCBCPKCS7)]
                             [cryptsuite :refer (->CAST5PCBCZERO)]
                             [cryptsuite :refer (->CAST5PCBCISO10126)]
                             [cryptsuite :refer (->CAST5PCBCX923)]
                             [cryptsuite :refer (->CAST5PCBCISO7816)]
                             [cryptsuite :refer (->CAST5CFB)]
                             [cryptsuite :refer (->CAST5OFB)]
                             [cryptsuite :refer (->CAST5CTR)])
            (net.ozias.crypt.cipher [cipher :as cipher]
                                    [blockcipher :as bc]
                                    [streamcipher :as sc]
                                    [cast5 :refer (->CAST5)])))

;; ### Record Definitions

(def ^{:doc "CAST5 record to be used in tests"} c5 (->CAST5))

;; The CAST5 block mode suites.
(def CAST5ECBPKCS7 (->CAST5ECBPKCS7))
(def CAST5ECBZERO (->CAST5ECBZERO))
(def CAST5ECBISO10126 (->CAST5ECBISO10126))
(def CAST5ECBX923 (->CAST5ECBX923))
(def CAST5ECBISO7816 (->CAST5ECBISO7816))
(def CAST5CBCPKCS7 (->CAST5CBCPKCS7))
(def CAST5CBCZERO (->CAST5CBCZERO))
(def CAST5CBCISO10126 (->CAST5CBCISO10126))
(def CAST5CBCX923 (->CAST5CBCX923))
(def CAST5CBCISO7816 (->CAST5CBCISO7816))
(def CAST5PCBCPKCS7 (->CAST5PCBCPKCS7))
(def CAST5PCBCZERO (->CAST5PCBCZERO))
(def CAST5PCBCISO10126 (->CAST5PCBCISO10126))
(def CAST5PCBCX923 (->CAST5PCBCX923))
(def CAST5PCBCISO7816 (->CAST5PCBCISO7816))

;; The CAST5 stream mode suites.
(def CAST5CFB (->CAST5CFB))
(def CAST5OFB (->CAST5OFB))

;; The CAST5 counter mode suite.
(def CAST5CTR (->CAST5CTR))

;; ### Specification Test Vectors
;; Each row is
;;
;;     [cipher initmap plaintext ciphertext]
;;

(def ^{:doc "Test vectors from the CAST5 spec"} c5spec-test-vectors
  [[c5 (cipher/initialize c5 c5-128-key) c5-pt c5-128-ct]
   [c5 (cipher/initialize c5 c5-80-key)  c5-pt c5-80-ct ]
   [c5 (cipher/initialize c5 c5-40-key)  c5-pt c5-40-ct ]])

;; ### Suite Test Vectors
;; Each row is
;;
;;     [suite plaintext ciphertext]
;;

(def ^{:doc "Test vectors for CAST5 block suites"} c5block-test-vectors
  [[CAST5ECBPKCS7    phrase [0x34 0xE1 0xB3 0xFC 0x0D 0x72 0xF1 0xD8
                             0x5D 0x83 0x71 0x26 0x6E 0x69 0xCC 0x65
                             0x77 0x22 0x29 0x60 0x66 0x85 0xB5 0xD2
                             0x03 0x82 0x26 0x55 0xFF 0xFD 0x91 0x70
                             0x56 0x1C 0x92 0x6F 0x8F 0xCE 0xDD 0x2B
                             0xC7 0xFD 0xCF 0x2E 0x83 0xA6 0x87 0xBD]]
   [CAST5ECBZERO     phrase [0x34 0xE1 0xB3 0xFC 0x0D 0x72 0xF1 0xD8
                             0x5D 0x83 0x71 0x26 0x6E 0x69 0xCC 0x65
                             0x77 0x22 0x29 0x60 0x66 0x85 0xB5 0xD2
                             0x03 0x82 0x26 0x55 0xFF 0xFD 0x91 0x70
                             0x56 0x1C 0x92 0x6F 0x8F 0xCE 0xDD 0x2B
                             0xF9 0xBC 0xAB 0x93 0x89 0xB4 0x80 0x66]]
   [CAST5ECBX923     phrase [0x34 0xE1 0xB3 0xFC 0x0D 0x72 0xF1 0xD8
                             0x5D 0x83 0x71 0x26 0x6E 0x69 0xCC 0x65
                             0x77 0x22 0x29 0x60 0x66 0x85 0xB5 0xD2
                             0x03 0x82 0x26 0x55 0xFF 0xFD 0x91 0x70
                             0x56 0x1C 0x92 0x6F 0x8F 0xCE 0xDD 0x2B
                             0xFE 0xF0 0xBD 0x65 0xB7 0x91 0xC4 0xA0]]
   [CAST5ECBISO7816  phrase [0x34 0xE1 0xB3 0xFC 0x0D 0x72 0xF1 0xD8
                             0x5D 0x83 0x71 0x26 0x6E 0x69 0xCC 0x65
                             0x77 0x22 0x29 0x60 0x66 0x85 0xB5 0xD2
                             0x03 0x82 0x26 0x55 0xFF 0xFD 0x91 0x70
                             0x56 0x1C 0x92 0x6F 0x8F 0xCE 0xDD 0x2B
                             0x07 0x8E 0xC9 0xBD 0x3A 0xFE 0xA3 0xB1]]
   [CAST5CBCPKCS7    phrase [0xE5 0x7C 0x6E 0x4A 0xD9 0x1C 0xA5 0xB4
                             0xCC 0x98 0xB4 0x94 0x3C 0x2A 0xAB 0xA8
                             0x16 0x86 0xE0 0xF8 0xB5 0x64 0x41 0x55
                             0x80 0x1C 0xDE 0x0F 0x9E 0x61 0x80 0x4A
                             0xE8 0x17 0xD3 0x65 0xD1 0x7C 0x0F 0x79
                             0xD6 0x8D 0x30 0x1E 0x0F 0x66 0x3A 0x77]]
   [CAST5CBCZERO     phrase [0xE5 0x7C 0x6E 0x4A 0xD9 0x1C 0xA5 0xB4
                             0xCC 0x98 0xB4 0x94 0x3C 0x2A 0xAB 0xA8
                             0x16 0x86 0xE0 0xF8 0xB5 0x64 0x41 0x55
                             0x80 0x1C 0xDE 0x0F 0x9E 0x61 0x80 0x4A
                             0xE8 0x17 0xD3 0x65 0xD1 0x7C 0x0F 0x79
                             0x66 0x19 0x9D 0xE4 0xCD 0xA2 0x2B 0xD7]]
   [CAST5CBCX923     phrase [0xE5 0x7C 0x6E 0x4A 0xD9 0x1C 0xA5 0xB4
                             0xCC 0x98 0xB4 0x94 0x3C 0x2A 0xAB 0xA8
                             0x16 0x86 0xE0 0xF8 0xB5 0x64 0x41 0x55
                             0x80 0x1C 0xDE 0x0F 0x9E 0x61 0x80 0x4A
                             0xE8 0x17 0xD3 0x65 0xD1 0x7C 0x0F 0x79
                             0x36 0x25 0xFE 0x14 0x83 0xDE 0xA8 0xF1]]
   [CAST5CBCISO7816  phrase [0xE5 0x7C 0x6E 0x4A 0xD9 0x1C 0xA5 0xB4
                             0xCC 0x98 0xB4 0x94 0x3C 0x2A 0xAB 0xA8
                             0x16 0x86 0xE0 0xF8 0xB5 0x64 0x41 0x55
                             0x80 0x1C 0xDE 0x0F 0x9E 0x61 0x80 0x4A
                             0xE8 0x17 0xD3 0x65 0xD1 0x7C 0x0F 0x79
                             0x4D 0xAD 0x2A 0x5B 0xCE 0xCD 0xFD 0xE1]]
   [CAST5PCBCPKCS7   phrase [0xE5 0x7C 0x6E 0x4A 0xD9 0x1C 0xA5 0xB4
                             0x3E 0x17 0x76 0x26 0x96 0x2A 0x80 0x80
                             0x51 0x63 0x89 0xDF 0x36 0x58 0x69 0x65
                             0xEA 0x7F 0xA3 0x1D 0x65 0x11 0x76 0xE4
                             0x91 0xFC 0x0D 0xEC 0x18 0x6C 0x43 0x9F
                             0x35 0xC2 0x93 0x9C 0x62 0x5D 0xAA 0xE8]]
   [CAST5PCBCZERO    phrase [0xE5 0x7C 0x6E 0x4A 0xD9 0x1C 0xA5 0xB4
                             0x3E 0x17 0x76 0x26 0x96 0x2A 0x80 0x80
                             0x51 0x63 0x89 0xDF 0x36 0x58 0x69 0x65
                             0xEA 0x7F 0xA3 0x1D 0x65 0x11 0x76 0xE4
                             0x91 0xFC 0x0D 0xEC 0x18 0x6C 0x43 0x9F
                             0x04 0x2B 0xE0 0x5E 0xC4 0xAD 0x62 0x78]]
   [CAST5PCBCX923    phrase [0xE5 0x7C 0x6E 0x4A 0xD9 0x1C 0xA5 0xB4
                             0x3E 0x17 0x76 0x26 0x96 0x2A 0x80 0x80
                             0x51 0x63 0x89 0xDF 0x36 0x58 0x69 0x65
                             0xEA 0x7F 0xA3 0x1D 0x65 0x11 0x76 0xE4
                             0x91 0xFC 0x0D 0xEC 0x18 0x6C 0x43 0x9F
                             0xB4 0xEE 0x2A 0x31 0xA2 0xC6 0x88 0xF8]]
   [CAST5PCBCISO7816 phrase [0xE5 0x7C 0x6E 0x4A 0xD9 0x1C 0xA5 0xB4
                             0x3E 0x17 0x76 0x26 0x96 0x2A 0x80 0x80
                             0x51 0x63 0x89 0xDF 0x36 0x58 0x69 0x65
                             0xEA 0x7F 0xA3 0x1D 0x65 0x11 0x76 0xE4
                             0x91 0xFC 0x0D 0xEC 0x18 0x6C 0x43 0x9F
                             0xE7 0xBF 0x0A 0xD8 0x2C 0x2A 0x15 0x40]]])

(def ^{:doc "Test vectors for CAST5 stream suites"} c5s-test-vectors
  [[CAST5CFB phrase [0x4C 0xA5 0x30 0x3F 0x0E 0xEB 0x35 0x35
                     0xC8 0xFE 0x91 0x6C 0x54 0x83 0x4E 0x37
                     0xAF 0x92 0x60 0x6B 0x3E 0x09 0xFA 0x06
                     0x66 0xCD 0x4B 0xE2 0x44 0xC5 0x93 0x02
                     0x4D 0xFB 0xAF 0x9D 0x3F 0x56 0x54 0xB1
                     0x57 0xA8 0x4D 0x91]]
   [CAST5OFB phrase [0x4C 0xB2 0x1F 0xC2 0x78 0x14 0x15 0x72
                     0x40 0xEE 0x72 0xC6 0x80 0xF0 0x7B 0xDE
                     0x81 0x79 0x15 0xA1 0xD5 0xE5 0x25 0x63
                     0x9A 0x59 0x3B 0xC4 0x87 0x46 0x3D 0x04
                     0x5E 0xB6 0x2D 0x52 0x88 0x4F 0xF4 0xB4
                     0x7F 0xED 0x7A 0xB4]]])

(def ^{:doc "Test vectors for CAST5 counter mode suite"} c5ctr-test-vectors
  [[CAST5CTR phrase [0x76 0xCF 0xA2 0x28 0x36 0xC1 0xEA 0x48
                     0x49 0x87 0xA5 0x7A 0x28 0xC3 0xED 0x0B
                     0x44 0xC8 0xBF 0x28 0x2D 0xC1 0xEE 0x5B
                     0x51 0x87 0xA8 0x7E 0x22 0xC6 0xA3 0x5F
                     0x4A 0xC2 0xE7 0x64 0x26 0xCE 0xFA 0x0B
                     0x46 0xC8 0xA0 0x26]]])

;; ### CAST5 Initialization

(def ^{:doc "Initialization map to be used in the suite tests."} initmap
  (cipher/initialize c5 key-128b))

;; ### CAST5 Tests

(deftest ^{:doc "Test CAST5 spec test vectors"} testSpec
  (testing "Spec"
    (is (= true (every? true? (map encrypt-block c5spec-test-vectors))))
    (is (= true (every? true? (map decrypt-block c5spec-test-vectors))))))

(deftest ^{:doc "Test CAST5 block suites"} testBlock
  (testing "Block"
    (is (= true (every? true? (map #(encryptor % :key initmap :iv iv-64b) c5block-test-vectors))))
    (is (= true (every? true? (map #(decryptor % :key initmap :iv iv-64b) c5block-test-vectors))))))

(deftest ^{:doc "Test CAST5 stream suites"} testStream
  (testing "Stream"
    (is (= true (every? true? (map #(encryptor % :key initmap :iv iv-64b) c5s-test-vectors))))
    (is (= true (every? true? (map #(decryptor % :key initmap :iv iv-64b) c5s-test-vectors))))))

(deftest ^{:doc "Test CAST5 counter mode suite"} testCounter
  (testing "Counter"
    (is (= true (every? true? (map #(encryptor % :key initmap :iv iv-32b) c5ctr-test-vectors))))
    (is (= true (every? true? (map #(decryptor % :key initmap :iv iv-32b) c5ctr-test-vectors))))))

(deftest ^{:doc "Test CAST5"} testCAST5
  (testing "CAST5"
    (testSpec)
    (testBlock)
    (testStream)
    (testCounter)))

(defn ^{:doc "Namespace hook to run tests in proper order"} test-ns-hook
  []
  (testCAST5))
