;; # TEA Block Cipher Tests
(ns ^{:author "Jason Ozias"
      :doc "Test suite for the TEA block cipher"}
  org.azjure.cipher.testtea
  (:require [clojure.test :refer :all]
            (org.azjure [libtest :refer :all]
                        [testivs :refer :all]
                        [testkeys :refer :all]
                        [testplaintext :refer :all]
                        [testciphertext :refer :all]
                        [cryptsuite :as cs]
                        [cryptsuite :refer (->TEAECBPKCS7)]
                        [cryptsuite :refer (->TEAECBZERO)]
                        [cryptsuite :refer (->TEAECBISO10126)]
                        [cryptsuite :refer (->TEAECBX923)]
                        [cryptsuite :refer (->TEAECBISO7816)]
                        [cryptsuite :refer (->TEACBCPKCS7)]
                        [cryptsuite :refer (->TEACBCZERO)]
                        [cryptsuite :refer (->TEACBCISO10126)]
                        [cryptsuite :refer (->TEACBCX923)]
                        [cryptsuite :refer (->TEACBCISO7816)]
                        [cryptsuite :refer (->TEAPCBCPKCS7)]
                        [cryptsuite :refer (->TEAPCBCZERO)]
                        [cryptsuite :refer (->TEAPCBCISO10126)]
                        [cryptsuite :refer (->TEAPCBCX923)]
                        [cryptsuite :refer (->TEAPCBCISO7816)]
                        [cryptsuite :refer (->TEACFB)]
                        [cryptsuite :refer (->TEAOFB)]
                        [cryptsuite :refer (->TEACTR)])
            (org.azjure.cipher [cipher :as cipher]
                               [blockcipher :as bc]
                               [tea :refer (->TEA)])))

;; ### Record Definitions

(def ^{:doc "TEA record to be used in the tests"} TEA (->TEA))

;; The TEA block mode suites.
(def TEAECBPKCS7 (->TEAECBPKCS7))
(def TEAECBZERO (->TEAECBZERO))
(def TEAECBISO10126 (->TEAECBISO10126))
(def TEAECBX923 (->TEAECBX923))
(def TEAECBISO7816 (->TEAECBISO7816))
(def TEACBCPKCS7 (->TEACBCPKCS7))
(def TEACBCZERO (->TEACBCZERO))
(def TEACBCISO10126 (->TEACBCISO10126))
(def TEACBCX923 (->TEACBCX923))
(def TEACBCISO7816 (->TEACBCISO7816))
(def TEAPCBCPKCS7 (->TEAPCBCPKCS7))
(def TEAPCBCZERO (->TEAPCBCZERO))
(def TEAPCBCISO10126 (->TEAPCBCISO10126))
(def TEAPCBCX923 (->TEAPCBCX923))
(def TEAPCBCISO7816 (->TEAPCBCISO7816))

;; The TEA stream mode suites.
(def TEACFB (->TEACFB))
(def TEAOFB (->TEAOFB))

;; The TEA counter mode suite.
(def TEACTR (->TEACTR))

;; ### TEA Initialization

(def ^{:doc "Initialization map to be used in the suite tests."} initmap0
  (cipher/initialize TEA {:key zeros-128-key}))

(def ^{:doc "Initialization map to be used in the suite tests."} initmap1
  (cipher/initialize TEA {:key tea-128-key-0}))

;; ### Specification Test Vectors
;; Each row is
;;
;;     [cipher initmap plaintext ciphertext]
;;

(def ^{:doc "Test vectors from the TEA spec"} teaspec-test-vectors
  [[TEA initmap0 zeros-64-pt tea-128-ct-0]
   [TEA initmap0 tea-64-pt-0 tea-128-ct-1]
   [TEA initmap1 zeros-64-pt tea-128-ct-2]
   [TEA initmap1 tea-64-pt-0 tea-128-ct-3]])

;; ### Suite Test Vectors
;; Each row is
;;
;;     [suite plaintext ciphertext]
;;

(def ^{:doc "Test vectors for TEA block suites"} teablock-test-vectors
  [[TEAECBPKCS7    initmap0 phrase [0x9B 0xCE 0xCC 0xF1 0xD9 0x55 0xD0 0xCD
                                    0x93 0xD2 0xCD 0xCA 0x50 0x09 0x66 0x99
                                    0x39 0xF6 0x89 0xAC 0xA5 0x0D 0x38 0x80
                                    0x50 0xDC 0xEF 0x5C 0xC8 0xB0 0x59 0x0E
                                    0x8D 0x4D 0x35 0xA0 0xF2 0x37 0x2C 0x33
                                    0xE7 0x86 0xC3 0xC9 0x35 0xC8 0x88 0xEF]]
   [TEAECBZERO     initmap0 phrase [0x9B 0xCE 0xCC 0xF1 0xD9 0x55 0xD0 0xCD
                                    0x93 0xD2 0xCD 0xCA 0x50 0x09 0x66 0x99
                                    0x39 0xF6 0x89 0xAC 0xA5 0x0D 0x38 0x80
                                    0x50 0xDC 0xEF 0x5C 0xC8 0xB0 0x59 0x0E
                                    0x8D 0x4D 0x35 0xA0 0xF2 0x37 0x2C 0x33
                                    0x50 0xA9 0x95 0x6A 0x21 0x8B 0x96 0x3E]]
   [TEAECBX923     initmap0 phrase [0x9B 0xCE 0xCC 0xF1 0xD9 0x55 0xD0 0xCD
                                    0x93 0xD2 0xCD 0xCA 0x50 0x09 0x66 0x99
                                    0x39 0xF6 0x89 0xAC 0xA5 0x0D 0x38 0x80
                                    0x50 0xDC 0xEF 0x5C 0xC8 0xB0 0x59 0x0E
                                    0x8D 0x4D 0x35 0xA0 0xF2 0x37 0x2C 0x33
                                    0x05 0xF6 0x84 0x14 0x2E 0x1E 0xE6 0xCB]]
   [TEAECBISO7816  initmap0 phrase [0x9B 0xCE 0xCC 0xF1 0xD9 0x55 0xD0 0xCD
                                    0x93 0xD2 0xCD 0xCA 0x50 0x09 0x66 0x99
                                    0x39 0xF6 0x89 0xAC 0xA5 0x0D 0x38 0x80
                                    0x50 0xDC 0xEF 0x5C 0xC8 0xB0 0x59 0x0E
                                    0x8D 0x4D 0x35 0xA0 0xF2 0x37 0x2C 0x33
                                    0x22 0x42 0x28 0x52 0x2F 0x14 0x6F 0x76]]
   [TEACBCPKCS7    initmap0 phrase [0x36 0xBE 0x5D 0x1B 0xB9 0x40 0xCC 0xF3
                                    0xB3 0x5B 0x51 0x40 0x45 0x5C 0xD8 0xF2
                                    0x5E 0x3A 0xD1 0x64 0xC2 0x2D 0x28 0x2C
                                    0x15 0xAF 0xAB 0x8E 0x86 0x8F 0x4C 0x86
                                    0xB1 0x16 0x84 0x35 0xA0 0x2C 0x1B 0xF2
                                    0x31 0xC5 0xEA 0xC6 0xDB 0x23 0x34 0x1E]]
   [TEACBCZERO     initmap0 phrase [0x36 0xBE 0x5D 0x1B 0xB9 0x40 0xCC 0xF3
                                    0xB3 0x5B 0x51 0x40 0x45 0x5C 0xD8 0xF2
                                    0x5E 0x3A 0xD1 0x64 0xC2 0x2D 0x28 0x2C
                                    0x15 0xAF 0xAB 0x8E 0x86 0x8F 0x4C 0x86
                                    0xB1 0x16 0x84 0x35 0xA0 0x2C 0x1B 0xF2
                                    0xC8 0xA3 0x73 0xF2 0x2E 0xF9 0x55 0xD2]]
   [TEACBCX923     initmap0 phrase [0x36 0xBE 0x5D 0x1B 0xB9 0x40 0xCC 0xF3
                                    0xB3 0x5B 0x51 0x40 0x45 0x5C 0xD8 0xF2
                                    0x5E 0x3A 0xD1 0x64 0xC2 0x2D 0x28 0x2C
                                    0x15 0xAF 0xAB 0x8E 0x86 0x8F 0x4C 0x86
                                    0xB1 0x16 0x84 0x35 0xA0 0x2C 0x1B 0xF2
                                    0xC8 0xBB 0x89 0x9C 0x1F 0xC5 0x9D 0x81]]
   [TEACBCISO7816  initmap0 phrase [0x36 0xBE 0x5D 0x1B 0xB9 0x40 0xCC 0xF3
                                    0xB3 0x5B 0x51 0x40 0x45 0x5C 0xD8 0xF2
                                    0x5E 0x3A 0xD1 0x64 0xC2 0x2D 0x28 0x2C
                                    0x15 0xAF 0xAB 0x8E 0x86 0x8F 0x4C 0x86
                                    0xB1 0x16 0x84 0x35 0xA0 0x2C 0x1B 0xF2
                                    0x3D 0xBC 0x22 0xB7 0xEB 0xB7 0xB0 0xDE]]
   [TEAPCBCPKCS7   initmap0 phrase [0x36 0xBE 0x5D 0x1B 0xB9 0x40 0xCC 0xF3
                                    0x2B 0x26 0xD0 0x5B 0xFA 0x4F 0xFF 0x8F
                                    0x60 0x1F 0x4A 0x3A 0x27 0xC2 0xBC 0x13
                                    0xB1 0x01 0x80 0xD9 0x01 0x66 0xBD 0x9C
                                    0x40 0x6D 0x5D 0x2F 0x12 0x01 0x8E 0x71
                                    0x7E 0x60 0x43 0xAE 0x74 0x76 0xCC 0xC0]]
   [TEAPCBCZERO    initmap0 phrase [0x36 0xBE 0x5D 0x1B 0xB9 0x40 0xCC 0xF3
                                    0x2B 0x26 0xD0 0x5B 0xFA 0x4F 0xFF 0x8F
                                    0x60 0x1F 0x4A 0x3A 0x27 0xC2 0xBC 0x13
                                    0xB1 0x01 0x80 0xD9 0x01 0x66 0xBD 0x9C
                                    0x40 0x6D 0x5D 0x2F 0x12 0x01 0x8E 0x71
                                    0x64 0x23 0x31 0x68 0xA8 0x3D 0xC8 0x74]]
   [TEAPCBCX923    initmap0 phrase [0x36 0xBE 0x5D 0x1B 0xB9 0x40 0xCC 0xF3
                                    0x2B 0x26 0xD0 0x5B 0xFA 0x4F 0xFF 0x8F
                                    0x60 0x1F 0x4A 0x3A 0x27 0xC2 0xBC 0x13
                                    0xB1 0x01 0x80 0xD9 0x01 0x66 0xBD 0x9C
                                    0x40 0x6D 0x5D 0x2F 0x12 0x01 0x8E 0x71
                                    0x61 0x29 0x35 0x2F 0xE9 0xBC 0xF3 0x4C]]
   [TEAPCBCISO7816 initmap0 phrase [0x36 0xBE 0x5D 0x1B 0xB9 0x40 0xCC 0xF3
                                    0x2B 0x26 0xD0 0x5B 0xFA 0x4F 0xFF 0x8F
                                    0x60 0x1F 0x4A 0x3A 0x27 0xC2 0xBC 0x13
                                    0xB1 0x01 0x80 0xD9 0x01 0x66 0xBD 0x9C
                                    0x40 0x6D 0x5D 0x2F 0x12 0x01 0x8E 0x71
                                    0xE9 0x69 0xB8 0x4A 0xFA 0x11 0xAA 0x34]]])

(def ^{:doc "Test vectors for TEA stream suites"} teas-test-vectors
  [[TEACFB initmap0 phrase [0x92 0xCF 0x1A 0x24 0xC4 0x42 0xFE 0xA9
                            0x60 0x4C 0x6D 0xDF 0xCC 0x0C 0x6C 0x8D
                            0xF5 0x06 0xEE 0x47 0x1D 0x2C 0xAB 0x6B
                            0xF6 0x89 0x00 0xF9 0x0F 0xB2 0xAA 0x58
                            0xD9 0x73 0x9D 0xBD 0xC3 0xB9 0x39 0x09
                            0x45 0x0F 0xB6 0xD8]]
   [TEAOFB initmap0 phrase [0x92 0xD0 0xEC 0x8B 0xC3 0xFF 0x7D 0xF3
                            0xC6 0x0C 0xFD 0x06 0xB5 0xFA 0xAD 0xAE
                            0x2C 0xD3 0x61 0x85 0x46 0x11 0x9E 0xD4
                            0xF7 0x43 0xCF 0x78 0x62 0x57 0x16 0x2A
                            0xA4 0x0C 0xF5 0xBA 0x27 0x59 0xF1 0xD1
                            0x92 0x52 0xD9 0xF2]]])

(def ^{:doc "Test vectors for TEA counter mode suite"} teactr-test-vectors
  [[TEACTR initmap0 phrase [0x1B 0xE8 0xE5 0x96 0x1A 0xDE 0xC4 0x54
                            0x24 0xA0 0xE2 0xC4 0x04 0xDC 0xC3 0x17
                            0x29 0xEF 0xF8 0x96 0x01 0xDE 0xC0 0x47
                            0x3C 0xA0 0xEF 0xC0 0x0E 0xD9 0x8D 0x43
                            0x27 0xE5 0xA0 0xDA 0x0A 0xD1 0xD4 0x17
                            0x2B 0xEF 0xE7 0x98]]])

;; ### TEA Tests

(deftest ^{:doc "Test TEA spec test vectors"} testSpec
  (testing "Spec"
    (is (= true (every? true? (map encrypt-block teaspec-test-vectors))))
    (is (= true (every? true? (map decrypt-block teaspec-test-vectors))))))

(deftest ^{:doc "Test TEA block suites"} testBlock
  (testing "Block"
    (is (= true (every? true? (map encryptor teablock-test-vectors))))
    (is (= true (every? true? (map decryptor teablock-test-vectors))))))

(deftest ^{:doc "Test TEA stream suites"} testStream
  (testing "Stream"
    (is (= true (every? true? (map #(encryptor % :iv iv-64b) teas-test-vectors))))
    (is (= true (every? true? (map #(decryptor % :iv iv-64b) teas-test-vectors))))))

(deftest ^{:doc "Test TEA counter mode suite"} testCounter
  (testing "Counter"
    (is (= true (every? true? (map #(encryptor % :iv iv-32b) teactr-test-vectors))))
    (is (= true (every? true? (map #(decryptor % :iv iv-32b) teactr-test-vectors))))))

(deftest ^{:doc "Test TEA"} testTEA
  (testing "TEA"
    (testSpec)
    (testBlock)
    (testStream)
    (testCounter)))

(defn ^{:doc "Namespace hook to run tests in proper order"} test-ns-hook
  []
  (testTEA))
