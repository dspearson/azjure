;; ## Test AES Encryption Engine
(ns ^{:author "Jason Ozias"}
     com.ozias.net.crypt.testaes
     (:require 
      [com.ozias.net.crypt.aes :refer [encrypt-block]]))

(def test-state
  (vector 0x00 0x11 0x22 0x33
          0x44 0x55 0x66 0x77
          0x88 0x99 0xaa 0xbb
          0xcc 0xdd 0xee 0xff))

(def test-key-128 
  (vector 0x00 0x01 0x02 0x03
          0x04 0x05 0x06 0x07
          0x08 0x09 0x0a 0x0b
          0x0c 0x0d 0x0e 0x0f))

(def test-key-192 
  (vector 0x00 0x01 0x02 0x03
          0x04 0x05 0x06 0x07
          0x08 0x09 0x0a 0x0b
          0x0c 0x0d 0x0e 0x0f
          0x10 0x11 0x12 0x13
          0x14 0x15 0x16 0x17))

(def test-key-256 
  (vector 0x00 0x01 0x02 0x03
          0x04 0x05 0x06 0x07
          0x08 0x09 0x0a 0x0b
          0x0c 0x0d 0x0e 0x0f
          0x10 0x11 0x12 0x13
          0x14 0x15 0x16 0x17
          0x18 0x19 0x1a 0x1b
          0x1c 0x1d 0x1e 0x1f))

(defn test-encrypt-block [state key]
  (encrypt-block state key))

(defn test-128-encrypt-block []
  (encrypt-block test-state test-key-128))

(defn test-192-encrypt-block []
  (encrypt-block test-state test-key-192))

(defn test-256-encrypt-block []
  (encrypt-block test-state test-key-256))

(defn test-all-encrypt-block []
  (map #(encrypt-block test-state %) 
       (vector test-key-128 test-key-192 test-key-256)))
