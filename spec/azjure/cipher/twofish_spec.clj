(ns azjure.cipher.twofish-spec
  (:require [azjure.libtest :refer :all]
            [speclj.core :refer :all]))

(def ct-128-tf-ecb-base
  [0xb0 0xdd 0x30 0xe9 0xab 0x1f 0x13 0x29
   0xc1 0xbe 0xe1 0x54 0xdd 0xbe 0x88 0xaf
   0x94 0xad 0x52 0xb9 0xeb 0xfb 0x67 0xe0
   0x2a 0x58 0xc8 0xe3 0xd9 0xf5 0xd6 0x0b])

(def ct-128-tf-ecb-iso7186
  (into ct-128-tf-ecb-base [0x8c 0xb6 0x85 0x20 0x34 0x21 0x6e 0x2a
                            0x15 0xca 0x63 0xca 0x8d 0x91 0x31 0x14]))

(def ct-128-tf-ecb-x923
  (into ct-128-tf-ecb-base [0xf8 0x83 0x93 0x07 0x66 0x8c 0xf5 0x0a
                            0x61 0x1a 0xb6 0x16 0xfb 0xf8 0xa6 0x83]))

(def ct-128-tf-ecb-pkcs7
  (into ct-128-tf-ecb-base [0x00 0x97 0x45 0xeb 0x42 0xc5 0x96 0xbf
                            0x16 0xb7 0x6e 0x17 0x2b 0x57 0xf7 0x86]))

(def ct-128-tf-ecb-zero
  (into ct-128-tf-ecb-base [0x2c 0x9c 0x94 0x68 0x57 0xfa 0x8f 0x4c
                            0x01 0xa0 0x45 0x98 0x08 0x9f 0xcf 0xbf]))

(def ct-128-tf-cbc-base
  [0xb0 0xdd 0x30 0xe9 0xab 0x1f 0x13 0x29
   0xc1 0xbe 0xe1 0x54 0xdd 0xbe 0x88 0xaf
   0x73 0x12 0xc8 0x14 0xcb 0xa5 0x45 0x5d
   0x57 0x98 0xe8 0x3d 0xe6 0x95 0x98 0x6c])

(def ct-128-tf-cbc-iso7186
  (into ct-128-tf-cbc-base [0x44 0xee 0xad 0x02 0x55 0x13 0x16 0xd0
                            0xb2 0x5c 0xcb 0xa9 0xe7 0x3f 0x92 0x2d]))

(def ct-128-tf-cbc-x923
  (into ct-128-tf-cbc-base [0x22 0x86 0xba 0xa1 0xf3 0x90 0x3c 0xc6
                            0xcf 0x62 0xb6 0x0c 0xa7 0x80 0x61 0x08]))

(def ct-128-tf-cbc-pkcs7
  (into ct-128-tf-cbc-base [0xd9 0x74 0xae 0x9d 0xac 0xff 0xe4 0x04
                            0xe7 0xe5 0x29 0x2f 0x62 0x4a 0xdf 0x91]))

(def ct-128-tf-cbc-zero
  (into ct-128-tf-cbc-base [0xd5 0xe8 0xe6 0x2e 0xc2 0x49 0xc0 0x5a
                            0x6a 0xab 0xa3 0xa2 0x18 0xdf 0x54 0x63]))

(def ct-128-tf-pcbc-base
  [0xb0 0xdd 0x30 0xe9 0xab 0x1f 0x13 0x29
   0xc1 0xbe 0xe1 0x54 0xdd 0xbe 0x88 0xaf
   0x76 0xaf 0xdf 0x47 0xe0 0x23 0x3e 0x32
   0x95 0x60 0xbb 0x92 0xc7 0x34 0xf0 0xe3])

(def ct-128-tf-pcbc-iso7186
  (into ct-128-tf-pcbc-base [0xc1 0x39 0xb5 0x2e 0x68 0x7d 0xbd 0xaf
                             0xdb 0x04 0x96 0x22 0x5a 0x3b 0xa8 0x70]))

(def ct-128-tf-pcbc-x923
  (into ct-128-tf-pcbc-base [0x70 0x88 0x92 0x73 0xe2 0xf8 0xf2 0xb1
                             0x9c 0xe0 0x7e 0xb9 0x1d 0x77 0x96 0xbe]))

(def ct-128-tf-pcbc-pkcs7
  (into ct-128-tf-pcbc-base [0x07 0xdf 0xa1 0x52 0x7c 0x39 0xf0 0x1c
                             0x5d 0x38 0xa9 0x7d 0x09 0x3b 0x20 0xb9]))

(def ct-128-tf-pcbc-zero
  (into ct-128-tf-pcbc-base [0x30 0xa4 0x5d 0xc4 0xe5 0xad 0x5d 0x6b
                             0xf4 0xf4 0x4a 0xdb 0xbd 0xf3 0x34 0x34]))

(def ct-128-tf-cfb-base
  [0xcb 0x30 0xfa 0x7c 0x87 0x67 0x45 0x51
   0xdd 0x9f 0x8e 0x5d 0x45 0x9f 0xad 0x7a
   0x71 0x03 0x55 0x4a 0x23 0x4d 0x73 0xe3
   0xed 0xbd 0xf1 0xe8 0xd7 0xf2 0xb6 0x37])

(def ct-128-tf-cfb-iso7186
  (into ct-128-tf-cfb-base [0x51 0xeb 0xf7 0x29 0x00 0x71 0x92 0xd3
                            0x46 0xbb 0x1c 0xdc 0xb0 0x64 0x2a 0x33]))

(def ct-128-tf-cfb-x923
  (into ct-128-tf-cfb-base [0x51 0xeb 0xf7 0x29 0x00 0x71 0x92 0xd3
                            0x46 0xbb 0x1c 0xdc 0x30 0x64 0x2a 0x37]))

(def ct-128-tf-cfb-pkcs7
  (into ct-128-tf-cfb-base [0x51 0xeb 0xf7 0x29 0x00 0x71 0x92 0xd3
                            0x46 0xbb 0x1c 0xdc 0x34 0x60 0x2e 0x37]))

(def ct-128-tf-cfb-zero
  (into ct-128-tf-cfb-base [0x51 0xeb 0xf7 0x29 0x00 0x71 0x92 0xd3
                            0x46 0xbb 0x1c 0xdc 0x30 0x64 0x2a 0x33]))

(def ct-128-tf-ofb-base
  [0xcb 0x30 0xfa 0x7c 0x87 0x67 0x45 0x51
   0xdd 0x9f 0x8e 0x5d 0x45 0x9f 0xad 0x7a
   0xb2 0xfe 0xa3 0x36 0x8d 0xc4 0xae 0xee
   0xe3 0xaf 0x28 0x04 0x0e 0xfa 0x26 0x39])

(def ct-128-tf-ofb-iso7186
  (into ct-128-tf-ofb-base [0x71 0x87 0xe9 0x41 0xc4 0x70 0x22 0x5f
                            0x14 0xde 0x33 0xd0 0x90 0x6a 0xa6 0x41]))

(def ct-128-tf-ofb-x923
  (into ct-128-tf-ofb-base [0x71 0x87 0xe9 0x41 0xc4 0x70 0x22 0x5f
                            0x14 0xde 0x33 0xd0 0x10 0x6a 0xa6 0x45]))

(def ct-128-tf-ofb-pkcs7
  (into ct-128-tf-ofb-base [0x71 0x87 0xe9 0x41 0xc4 0x70 0x22 0x5f
                            0x14 0xde 0x33 0xd0 0x14 0x6e 0xa2 0x45]))

(def ct-128-tf-ofb-zero
  (into ct-128-tf-ofb-base [0x71 0x87 0xe9 0x41 0xc4 0x70 0x22 0x5f
                            0x14 0xde 0x33 0xd0 0x10 0x6a 0xa6 0x41]))

(def ct-128-tf-ctr-base
  [0xcb 0x30 0xfa 0x7c 0x87 0x67 0x45 0x51
   0xdd 0x9f 0x8e 0x5d 0x45 0x9f 0xad 0x7a
   0xac 0x1c 0x07 0xd1 0x97 0x7a 0x88 0xc8
   0x81 0x7a 0xb0 0x5a 0xfc 0x3a 0x5e 0x91])

(def ct-128-tf-ctr-iso7186
  (into ct-128-tf-ctr-base [0x84 0x94 0x18 0xa6 0xb4 0x75 0x22 0xe3
                            0x29 0xbc 0x83 0x74 0xef 0x95 0xa1 0x24]))

(def ct-128-tf-ctr-x923
  (into ct-128-tf-ctr-base [0x84 0x94 0x18 0xa6 0xb4 0x75 0x22 0xe3
                            0x29 0xbc 0x83 0x74 0x6f 0x95 0xa1 0x20]))

(def ct-128-tf-ctr-pkcs7
  (into ct-128-tf-ctr-base [0x84 0x94 0x18 0xa6 0xb4 0x75 0x22 0xe3
                            0x29 0xbc 0x83 0x74 0x6b 0x91 0xa5 0x20]))

(def ct-128-tf-ctr-zero
  (into ct-128-tf-ctr-base [0x84 0x94 0x18 0xa6 0xb4 0x75 0x22 0xe3
                            0x29 0xbc 0x83 0x74 0x6f 0x95 0xa1 0x24]))

(def ^{:private true
       :doc     "Suite tests"}
  test-suites [[:ecb :iso7816 ct-128-tf-ecb-iso7186]
               [:ecb :iso10126 ct-128-tf-ecb-base]
               [:ecb :pkcs7 ct-128-tf-ecb-pkcs7]
               [:ecb :x923 ct-128-tf-ecb-x923]
               [:ecb :zero ct-128-tf-ecb-zero]
               [:cbc :iso7816 ct-128-tf-cbc-iso7186]
               [:cbc :iso10126 ct-128-tf-cbc-base]
               [:cbc :pkcs7 ct-128-tf-cbc-pkcs7]
               [:cbc :x923 ct-128-tf-cbc-x923]
               [:cbc :zero ct-128-tf-cbc-zero]
               [:pcbc :iso7816 ct-128-tf-pcbc-iso7186]
               [:pcbc :iso10126 ct-128-tf-pcbc-base]
               [:pcbc :pkcs7 ct-128-tf-pcbc-pkcs7]
               [:pcbc :x923 ct-128-tf-pcbc-x923]
               [:pcbc :zero ct-128-tf-pcbc-zero]
               [:cfb :iso7816 ct-128-tf-cfb-iso7186]
               [:cfb :iso10126 ct-128-tf-cfb-base]
               [:cfb :pkcs7 ct-128-tf-cfb-pkcs7]
               [:cfb :x923 ct-128-tf-cfb-x923]
               [:cfb :zero ct-128-tf-cfb-zero]
               [:ofb :iso7816 ct-128-tf-ofb-iso7186]
               [:ofb :iso10126 ct-128-tf-ofb-base]
               [:ofb :pkcs7 ct-128-tf-ofb-pkcs7]
               [:ofb :x923 ct-128-tf-ofb-x923]
               [:ofb :zero ct-128-tf-ofb-zero]
               [:ctr :iso7816 ct-128-tf-ctr-iso7186]
               [:ctr :iso10126 ct-128-tf-ctr-base]
               [:ctr :pkcs7 ct-128-tf-ctr-pkcs7]
               [:ctr :x923 ct-128-tf-ctr-x923]
               [:ctr :zero ct-128-tf-ctr-zero]])

(def ^{:private true
       :doc     ""}
  test-vectors [[[0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
                  0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
                 [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
                  0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
                 [0x9F 0x58 0x9F 0x5C 0xF6 0x12 0x2C 0x32
                  0xB6 0xBF 0xEC 0x2F 0x2A 0xE8 0xC3 0x5A]]
                [[0x01 0x23 0x45 0x67 0x89 0xAB 0xCD 0xEF
                  0xFE 0xDC 0xBA 0x98 0x76 0x54 0x32 0x10
                  0x00 0x11 0x22 0x33 0x44 0x55 0x66 0x77]
                 [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
                  0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
                 [0xCF 0xD1 0xD2 0xE5 0xA9 0xBE 0x9C 0xDF
                  0x50 0x1F 0x13 0xB8 0x92 0xBD 0x22 0x48]]
                [[0x01 0x23 0x45 0x67 0x89 0xAB 0xCD 0xEF
                  0xFE 0xDC 0xBA 0x98 0x76 0x54 0x32 0x10
                  0x00 0x11 0x22 0x33 0x44 0x55 0x66 0x77
                  0x88 0x99 0xAA 0xBB 0xCC 0xDD 0xEE 0xFF]
                 [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
                  0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
                 [0x37 0x52 0x7B 0xE0 0x05 0x23 0x34 0xB8
                  0x9F 0x0C 0xFC 0xCA 0xE8 0x7C 0xFA 0x20]]])

(def ^{:private true
       :doc "Configuration Map"}
  cm {:type :twofish :eid :str :doe :str})

(describe
  "Twofish"
  (check-blocksize cm 128)
  (check-keysizes cm (range 128 257))
  (check-test-vectors cm test-vectors)
  (check-test-suites cm test-suites))